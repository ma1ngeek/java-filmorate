DROP ALL OBJECTS;

CREATE TABLE IF NOT EXISTS users (
    ID int generated by default as identity primary key,
    EMAIL varchar(100) not null,
    LOGIN varchar(100) not null,
    NAME varchar(100),
    BIRTHDAY date not null
    );

CREATE TABLE IF NOT EXISTS films (
    ID int generated by default as identity primary key,
    NAME varchar(100) not null,
    DESCRIPTION varchar(200) not null,
    RELEASE_DATE    date not null,
    DURATION        int not null
    );

CREATE TABLE IF NOT EXISTS friends (
    USER_ID int not null,
    FRIEND_ID int not null,
    STATUS varchar(50),
    CONSTRAINT fk_user_friends
     FOREIGN KEY (USER_ID)
     REFERENCES USERS(ID) ON DELETE CASCADE,
    CONSTRAINT fk_friend_friends
     FOREIGN KEY (FRIEND_ID)
     REFERENCES USERS(ID) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS likes (
    USER_ID int not null,
    FILM_ID int not null,
    CONSTRAINT fk_user_like
     FOREIGN KEY (USER_ID)
     REFERENCES users(ID) ON DELETE CASCADE,
    CONSTRAINT fk_film_like
     FOREIGN KEY (FILM_ID)
     REFERENCES films(ID) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS genres (
    ID int AUTO_INCREMENT PRIMARY KEY,
    NAME varchar(100) not null
    );

CREATE TABLE IF NOT EXISTS filmgenres (
    FILM_ID int not null,
    GENRE_ID int not null,
    CONSTRAINT fk_film_genre
    FOREIGN KEY (FILM_ID)
    REFERENCES films(ID) ON DELETE CASCADE,
    CONSTRAINT fk_genre_id
    FOREIGN KEY (GENRE_ID)
    REFERENCES genres(ID) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS mparate (
    ID int AUTO_INCREMENT PRIMARY KEY,
    NAME varchar(100) not null
    );

CREATE TABLE IF NOT EXISTS filmrates (
    FILM_ID int PRIMARY KEY,
    RATE_ID int not null,
    CONSTRAINT fk_mpa
    FOREIGN KEY (RATE_ID)
    REFERENCES mparate(ID) ON DELETE CASCADE,
    CONSTRAINT fk_film_mpa
    FOREIGN KEY (FILM_ID)
    REFERENCES films(ID) ON DELETE CASCADE
    );